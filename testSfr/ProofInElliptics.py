# Prouver que si 
# Uw =  4x^5 + 3x^4 + 5x^3 + 3x^2 + 4x 
# Vw =  6x^5 + x^4 + 6x^3 + 6x^2 + 4x + 3 
# Ww =  6x^5 + 4x^4 + 3x^3 + 5x^2 
# t(x) =  x^6 + 6 
# h_quo(x) =  3x^4 + x^3 + x^2 + 2x

import sys;
from py_ecc.bn128 import G1, G2, multiply, add, curve_order, eq, neg, pairing
import galois

GF = galois.GF(curve_order)
#GF = galois.GF(7)


# p(x) = x^2 -2x -8
# x = 30
#p = galois.Poly([1, -2, -8], field=GF)

# Prouver que u*v = w+ht
u = galois.Poly([14774563938491510775016323878048660684770145970280823181996287825938670734546, 3648040478639879203707734290876212514758060733402672390616367364429301415868, 10032111316259667810196269299909584415584667016857349074195010252180578894213, 7296080957279758407415468581752425029516121466805344781232734728858602830837, 8025689053007734248157015439927667532467733613485879259356008201744463116328, 21888242871839275222246405745257275088548364400416034343698204186575808495064], field=GF)
v = galois.Poly([20429026680383323540763312028906790082645140107054965387451657240804087929235, 14592161914559516814830937163504850059032242933610689562465469457717205663881, 7296080957279758407415468581752425029516121466805344781232734728858602830952, 7296080957279758407415468581752425029516121466805344781232734728858602834704, 16051378106015468496314030879855335064935467226971758518712016403488926226275, 1809], field=GF)
w = galois.Poly([11126523459851631571308589587172448170012085236878150791379920461509369318592, 3648040478639879203707734290876212514758060733402672390616367364429301416191, 13680151794899547013904003590785796930342727750260021464811377616609880307969, 7296080957279758407415468581752425029516121466805344781232734728858602837524, 8025689053007734248157015439927667532467733613485879259356008201744463107336, 3647], field=GF)
t = galois.Poly([1, 21888242871839275222246405745257275088548364400416034343698204186575808495596, 175, 21888242871839275222246405745257275088548364400416034343698204186575808494882, 1624, 21888242871839275222246405745257275088548364400416034343698204186575808493853, 720], field=GF)
h = galois.Poly([0, 18568526036276985146872367540559921700118529133019602468237309884945144207081, 8414813370729321363219173764287796867375260091715497647688420720616921933174, 2760350628837508597472185613429667469500265954941355442233051305751504736345, 1240333762737558929260629658897912255017740649356908612809564903905962484152, 19213013187503363806194067265281385911059119862587407923912868119327654122536], field=GF)

# check initial
h_quo = (u * v - w) // t
h_rem = (u * v - w) % t

#print("Uw", u)
#print("Vw", v)
#print("Ww", w)
#print("t(x)", t)

print(h*t)

print(h_quo)
print(h_rem)
if (h_rem != 0):
    print("Les équations sont cassées")
    sys.exit()

print("Les équations sont bonnes")
#sys.exit()
# evaluate at 8 - Normalement c'est le trusted ici
tau = GF(6)

tau_0 = G1
tau_1 = multiply(G1, int(tau))
tau_2 = multiply(G1, int(tau**2))
tau_3 = multiply(G1, int(tau**3))
tau_4 = multiply(G1, int(tau**4))
tau_5 = multiply(G1, int(tau**5))
tau_6 = multiply(G1, int(tau**6))

tauG2_0 = G2
tauG2_1 = multiply(G2, int(tau))
tauG2_2 = multiply(G2, int(tau**2))
tauG2_3 = multiply(G2, int(tau**3))
tauG2_4 = multiply(G2, int(tau**4))
tauG2_5 = multiply(G2, int(tau**5))
tauG2_6 = multiply(G2, int(tau**6))
tauG2_7 = multiply(G2, int(tau**7))
tauG2_8 = multiply(G2, int(tau**8))
tauG2_9 = multiply(G2, int(tau**9))
tauG2_10 = multiply(G2, int(tau**10))

print("Evaluation en x = ", tau)

#X2 = multiply(multiply(G1, int(tau**2)), 1)
#X1 = multiply(neg(multiply(G1, int(tau))), 2)
#X0 = multiply(neg(G1), 8)

# 4x^5 + 3x^4 + 5x^3 + 3x^2 + 4x 
X5 = multiply(tauG2_5, 14774563938491510775016323878048660684770145970280823181996287825938670734546)
X4 = multiply(tauG2_4, 3648040478639879203707734290876212514758060733402672390616367364429301415868)
X3 = multiply(tauG2_3, 10032111316259667810196269299909584415584667016857349074195010252180578894213)
X2 = multiply(tauG2_2, 7296080957279758407415468581752425029516121466805344781232734728858602830837)
X1 = multiply(tauG2_1, 8025689053007734248157015439927667532467733613485879259356008201744463116328)
X0 = multiply(tauG2_0, 21888242871839275222246405745257275088548364400416034343698204186575808495064)
encodeCoeffU=(add(add(add(add(add(X0, X1), X2),X3),X4),X5))
print("U=",encodeCoeffU)

# 6x^5 + x^4 + 6x^3 + 6x^2 + 4x + 3
X5 = multiply(tau_5, 20429026680383323540763312028906790082645140107054965387451657240804087929235)
X4 = multiply(tau_4, 14592161914559516814830937163504850059032242933610689562465469457717205663881)
X3 = multiply(tau_3, 7296080957279758407415468581752425029516121466805344781232734728858602830952)
X2 = multiply(tau_2, 7296080957279758407415468581752425029516121466805344781232734728858602834704)
X1 = multiply(tau_1, 16051378106015468496314030879855335064935467226971758518712016403488926226275)
X0 = multiply(tau_0, 1809)
encodeCoeffV=(add(add(add(add(add(X0, X1), X2),X3),X4),X5))
print("V",encodeCoeffV)

# 6x^5 + 4x^4 + 3x^3 + 5x^2
X5 = multiply(tauG2_5, 11126523459851631571308589587172448170012085236878150791379920461509369318592)
X4 = multiply(tauG2_4, 3648040478639879203707734290876212514758060733402672390616367364429301416191)
X3 = multiply(tauG2_3, 13680151794899547013904003590785796930342727750260021464811377616609880307969)
X2 = multiply(tauG2_2, 7296080957279758407415468581752425029516121466805344781232734728858602837524)
X1 = multiply(tauG2_1, 8025689053007734248157015439927667532467733613485879259356008201744463107336)
X0 = multiply(tauG2_0, 3647)
encodeCoeffW=(add(add(add(add(add(X0, X1), X2),X3),X4),X5))
print("W",encodeCoeffW)

# h*t 3x^10 + x^9 + x^8 + 2x^7 + 4x^4 + 6x^3 + 6x^2 + 5x
X10 = multiply(tauG2_10, 18568526036276985146872367540559921700118529133019602468237309884945144207081)
X9 = multiply(tauG2_9, 12464138302019587279334758827160392758756707505792464001272588495133446505579)
X8 = multiply(tauG2_8, 11187324134495629558037051825353718378591386249101528664556859917583190992486)
X7 = multiply(tauG2_7, 3526439129351883230250809814513672097599458708955916644262488452281658171725)
X6 = multiply(tauG2_6, 19346774671720159376996684189280180369933582089478839244902134922690061123801)
X5 = multiply(tauG2_5, 14652962589203514801559399401686120267611543945834067435642408913791029854419)
X4 = multiply(tauG2_4, 8876898498023706062355486774465450452577947784613169483833160586777960987111)
X3 = multiply(tauG2_3, 4377648574367855044449281149051455017709672880083206868739640837315170484471)
X2 = multiply(tauG2_2, 7685205275001345522477626906112554364423647945034963169565147247731053329064)
X1 = multiply(tauG2_1, 8755297148735710088898562298102910035419345760166413737479281674630327826372)
X0 = multiply(tauG2_0, 21888242871839275222246405745257275088548364400416034343698204186575807491593)
encodeCoeffHT=(add(add(add(add(add(add(add(add(add(add(X0, X1), X2),X3),X4),X5),X6),X7),X8),X9),X10))

# 3x^4 + x^3 + x^2 + 2x
#X4 = multiply(tauG2_4, 3)
#X3 = multiply(tauG2_3, 1)
#X2 = multiply(tauG2_2, 1)
#X1 = multiply(tauG2_1, 2)
#X0 = multiply(tauG2_0, 0)
#encodeCoeffh=(add(add(add(X0, X1), X2),X3),X4)


#print(encodeCoeffW)
print("W+HT", add(encodeCoeffW,encodeCoeffHT))

#multTH = multiply(encodeCoeffT, int(encodeCoeffh))

#print(multiply(encodeCoeffU,encodeCoeffV))
LPairing = pairing(encodeCoeffU, encodeCoeffV)
RPairing = pairing(add(encodeCoeffW, encodeCoeffHT), G1)

print(LPairing)
print(RPairing)

print(LPairing == RPairing)

#if eq(encodePolyResult, encodeCoeffResult):
#    print("elliptic curve points are equal @", encodeCoeffResult)

